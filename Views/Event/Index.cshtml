@using Microsoft.AspNetCore.Identity
@model EventViewModel
@inject UserManager<User> UserManager
@inject SignInManager<User> SignInManager

@{
    ViewData["Title"] = "Events";
}

<style>
    .container{
        max-width: none;
        margin: 0;
    }
    main{
        width: 100%;
    }
    .full-map{
        margin-top: -16px;
        margin-bottom: -16px;
        min-height: calc(100vh - 118px);
    }

</style>

<div onload="loadEvents()">

    <div class="row">

        <div class="col-md-5">
            <h3>
                @ViewData["Title"]
            </h3>

            <table id="events" class="table">
            @foreach (var item in Model.Events)
            {
            <tr>
                    <td >
                    @item.Name
                    </td>
                    <td >
                        @item.StartDate
                    </td>
                    <td style="display:none;">@item.longitude

                    </td>
                    <td style="display:none;" >@item.latitude

                    </td>
                    <td>
                        @if(item.doIOwnedIt){
                            <p>This is your event</p>
                        }else if(item.Status == 1) {
                            <a asp-controller="Event" asp-action="ResignEvent" asp-route-id = "@item.Id">Resign</a>  
                        }else{
                            <a asp-controller="Event" asp-action="JoinEvent" asp-route-id = "@item.Id">Join</a>  
                        }
                    </td>
                </tr>
            }
            </table>
            <a asp-area="" asp-controller="Event" asp-action="EventForm">Add event</a>

        </div>
        <div class="col-md-7 pr-0">
            <div id="map" class="full-map"></div>
        </div>
    </div>


<script language="javascript" type="text/javascript" >
    
    var events = [];

        function loadEvents(){
            var table = document.getElementById("events");
            var rowLen = table.rows.length;
            for (var i = 0; i< rowLen; i++){
                var row = table.rows[i];
                var tmp = row.cells[2].innerHTML.trim();
                var tmp2 = " ";
                var tmp3 = row.cells[3].innerHTML.trim();
                var event = tmp3.concat(tmp2, tmp);
                //alert(event);
                events.push(event);
            }
        }

            function initMap() {
                loadEvents();
            var map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12,
                center: { lat: 54.3510232, lng: 18.644458999999983 },
                scrollwheel: true,
                clickable: true
            });
            var geocoder = new google.maps.Geocoder();

            for (var i = 0; i < events.length; i++) {
                geocodeAddress(geocoder, map, events[i]);

            }
        }

        function geocodeAddress(geocoder, resultsMap, address) {
            //alert(address);
            geocoder.geocode({ 'address': address }, function (results, status) {
                if (status === 'OK') {
                    resultsMap.setCenter(results[0].geometry.location);
                    lastMarker = new google.maps.Marker({
                        map: resultsMap,
                        icon: {
                            path: google.maps.SymbolPath.CIRCLE,
                            scale: 7
                        },
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }


</script>
    <script language="javascript" type="text/javascript" async defer 
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDcVbgOrcixUdvZg0jkiGyGGz8sOYZss6I&callback=initMap">
    </script>